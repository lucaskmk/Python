#reverse = [::-1]
snack = "Chocolate cookie."
print(snack[0])
print(snack[9])
print(snack[-1])
print(snack[10:16]) # funciona como un range q inicia do da esquerda = 10 ate o range do da direita 16 ent 15 (lembra range fica menos 1 pq comeca do 0)
print(snack[10:-1]) # -1: since the stop index is excluded in slicing. -1 = ultimo mas como range nm conta o umltimo ent 10 ate penultimo
# Stop value not provided
print(snack[0:]) # Como n tem limite de termino faz tds
# [ AONDE COMECA : AONDE TERMINA-1: quantos em quantos] === for range(inicia, limite-1, pula de n em n)
# Start value not provided (Stop value excluded according to syntax)
print(snack[:-1]) # Como so tem limite de termino faz tds ate (ultimo valor = -1) -1 pq range lembra
print(snack[::-1][0:10]) # 0 a 10 d0 final
print(snack[0:10][::-1], 'teste')
# This is also allowed
print(snack[:]) # n tem limite de comeca e terminar ent td
number_string = "1020304050"
print(number_string[0:-1:2])
print(number_string[::-1]) # n tem limite de comeca e terminar ent td SENDO DESSE TD faz de traz pra frente pq printa ultimo dps menos ultimo em diante
print(number_string[::-2]) # mesma coisa so q ao envez de ser -1 pra traz vai -2 pra traz

#n range(1,8, 2):
